---
import { Image } from "astro:assets";
import profileImage from "../assets/me-avatar.png";

interface Props {
    lang: string;
    showClientsSection?: boolean;
    i18n: {
        nav: {
            home: string;
            about: string;
            projects: string;
            contact: string;
        };
        welcome: {
            title: string;
            description: string;
            viewWork: string;
            contactMe: string;
            clients: string;
            indonesianClients: string;
            internationalClients: string;
        };
        footer: {
            darkMode: string;
            allRightsReserved: string;
        };
    };
}

const { lang, i18n, showClientsSection = false } = Astro.props;

// Language switcher URL and greeting
const alternateLanguageUrl = lang === 'en' ? '/id/' : '/';
const greeting = lang === 'en' ? "Hello, I'm Rio" : "Halo, Saya Rio";
const languageLabel = lang === 'en' ? 'Language' : 'Bahasa';
const alternateLanguage = lang === 'en' ? 'Bahasa Indonesia' : 'English';
---

<div class="min-h-screen">
    <!-- Hero content -->
    <div class="hero min-h-screen">
        <div class="hero-content flex-col lg:flex-row">
            <div class="avatar ring ring-primary ring-offset-base-100 ring-offset-2">
                <div class="w-24">
                    <Image
                        src={profileImage}
                        alt="Profile"
                        width={200}
                        height={200}
                    />
                </div>
            </div>
            <div>
                <h1 class="text-5xl font-bold">{greeting}</h1>
                <p class="text-xl opacity-90 py-6">{i18n.welcome.description}</p>
                <div class="flex items-center gap-2 mb-4">
                    <span class="text-sm opacity-70">{languageLabel}:</span>
                    <a href={alternateLanguageUrl} class="link link-primary inline-flex items-center gap-1 hover:opacity-90 transition-opacity duration-300">
                        <span class="font-medium">{alternateLanguage}</span>
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="m9 18 6-6-6-6"/></svg>
                    </a>
                </div>
                <div class="flex flex-wrap gap-2">
                    <a 
                        href={`/${lang === 'en' ? '' : 'id/'}work`} 
                        class="btn btn-primary hover:scale-105 transition-transform duration-300"
                    >
                        {i18n.welcome.viewWork}
                    </a>
                    <a 
                        href="#contact" 
                        class="btn btn-outline btn-primary hover:scale-105 transition-transform duration-300"
                    >
                        {i18n.welcome.contactMe}
                    </a>
                </div>
            </div>
        </div>
    </div>

    {showClientsSection && (
        <div class="container mx-auto px-4 py-8">
            <section id="clients" class="py-8 md:py-12 lg:py-16">
                <h2 class="text-3xl font-bold text-center">{i18n.welcome.clients}</h2>

                <!-- Indonesia/Local Clients -->
                <div class="mb-8">
                    <h3 class="text-xl text-center opacity-90 mb-4">{i18n.welcome.indonesianClients}</h3>
                    <div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-4 justify-items-center items-center">
                        {[...Array(10)].map((_, i) => (
                            <div class={`flex items-center justify-center ${i % 2 === 0 ? "w-48 h-24" : "w-32 h-32"} transition-all duration-300`}>
                                <div class={`${i % 2 === 0 ? "rounded-lg" : "rounded-full"} w-full h-full ${
                                    [
                                        "bg-primary/20",
                                        "bg-secondary/20",
                                        "bg-accent/20",
                                        "bg-info/20",
                                        "bg-success/20",
                                        "bg-warning/20",
                                        "bg-error/20",
                                        "bg-neutral/20",
                                    ][i % 8]
                                }`}></div>
                            </div>
                        ))}
                    </div>
                </div>

                <!-- International Clients -->
                <div>
                    <h3 class="text-xl text-center opacity-90 mb-4">{i18n.welcome.internationalClients}</h3>
                    <div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-4 justify-items-center items-center">
                        {[...Array(10)].map((_, i) => (
                            <div class={`flex items-center justify-center ${i % 2 === 0 ? "w-48 h-24" : "w-32 h-32"} transition-all duration-300`}>
                                <div class={`${i % 2 === 0 ? "rounded-lg" : "rounded-full"} w-full h-full ${
                                    [
                                        "bg-primary/20",
                                        "bg-secondary/20",
                                        "bg-accent/20",
                                        "bg-info/20",
                                        "bg-success/20",
                                        "bg-warning/20",
                                        "bg-error/20",
                                        "bg-neutral/20",
                                    ][i % 8]
                                }`}></div>
                            </div>
                        ))}
                    </div>
                </div>
            </section>
        </div>
    )}
</div>
