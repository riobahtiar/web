---
import { Icon } from "astro-icon/components";
import { Image } from "astro:assets";
import logoDark from "../assets/logo-dark.svg";
import logoLight from "../assets/logo-light.svg";

interface Props {
  lang: string;
  i18n: {
    nav: {
      home: string;
      about: string;
      projects: string;
      contact: string;
      work: string;
      blog: string;
      comingSoon: string;
    };
    footer: {
      darkMode: string;
    };
  };
}

const { lang, i18n } = Astro.props;

// Language switcher
const currentPath = new URL(Astro.request.url).pathname;
const pagePath = currentPath.replace(/^\/id\/?/, "/");
const alternateLanguageUrl = lang === "en" ? `/id${pagePath}` : pagePath;
const languageLabel = lang === "en" ? "Language" : "Bahasa";
const alternateLanguage = lang === "en" ? "Bahasa Indonesia" : "English";

// Homepage URL based on language
const homeUrl = lang === "en" ? "/" : "/id/";

// Check if current page is active
const isActive = (path: string) => {
  if (path === "#projects") return false; // Projects is an anchor, not a page
  if (path === homeUrl) return currentPath === homeUrl;
  return currentPath.startsWith(path);
};

// Define URLs for each page
const aboutUrl = `/${lang === "en" ? "" : "id/"}about`;
const servicesUrl = lang === "en" ? "/services" : "/id/services";
const contactUrl = `/${lang === "en" ? "" : "id/"}contact`;
---

<header
  id="main-header"
  class="bg-base-100/80 border-base-200 fixed top-0 right-0 left-0 z-40 border-b backdrop-blur-sm transition-all duration-300"
>
  <div class="navbar container mx-auto px-4">
    <div class="navbar-start">
      <a
        href={homeUrl}
        class="flex items-center transition-opacity duration-300 hover:opacity-80"
      >
        <div class="relative h-8 w-32">
          <Image
            src={logoLight}
            alt="Rio Logo Light"
            class="logo-light absolute top-0 left-0 h-full w-auto transform object-contain transition-all duration-300"
            height={32}
            width={58.3}
          />
          <Image
            src={logoDark}
            alt="Rio Logo Dark"
            class="logo-dark absolute top-0 left-0 h-full w-auto transform object-contain transition-all duration-300"
            height={32}
            width={58.3}
          />
        </div>
      </a>
    </div>

    <div class="navbar-center hidden lg:flex">
      <ul class="menu menu-horizontal gap-2 px-1">
        <li>
          <a
            href={aboutUrl}
            class={isActive(aboutUrl) ? "active font-medium" : ""}
            >{i18n.nav.about}</a
          >
        </li>
        <li>
          <a
            href={servicesUrl}
            class={isActive(servicesUrl) ? "active font-medium" : ""}
            >{i18n.nav.work}</a
          >
        </li>
        <li>
          <div class="tooltip tooltip-bottom" data-tip={i18n.nav.comingSoon}>
            <a class="cursor-not-allowed opacity-50">{i18n.nav.blog}</a>
          </div>
        </li>
        <li>
          <a
            href={contactUrl}
            class={isActive(contactUrl) ? "active font-medium" : ""}
            >{i18n.nav.contact}</a
          >
        </li>
      </ul>
    </div>

    <div class="navbar-end">
      <div class="flex items-center gap-4">
        <!-- Social Media Icons -->
        <div class="hidden items-center gap-3 sm:flex">
          <a
            href="https://go.rio.my.id/g"
            class="btn btn-ghost btn-sm btn-circle"
            aria-label="GitHub"
          >
            <Icon name="tabler:brand-github" class="h-5 w-5" />
          </a>
          <a
            href="https://go.rio.my.id/l"
            class="btn btn-ghost btn-sm btn-circle"
            aria-label="LinkedIn"
          >
            <Icon name="tabler:brand-linkedin" class="h-5 w-5" />
          </a>
          <a
            href="https://go.rio.my.id/x"
            class="btn btn-ghost btn-sm btn-circle"
            aria-label="Twitter"
          >
            <Icon name="tabler:brand-x" class="h-5 w-5" />
          </a>
        </div>

        <!-- Language Switcher -->
        <div class="dropdown dropdown-end">
          <button class="btn btn-ghost btn-sm gap-1" aria-label={languageLabel}>
            <Icon name="tabler:language" class="h-5 w-5" />
            <span class="hidden sm:inline">{lang === "en" ? "EN" : "ID"}</span>
          </button>
          <ul
            tabindex="0"
            class="dropdown-content menu bg-base-200 rounded-box z-[1] p-2 shadow"
          >
            <li>
              <a href={alternateLanguageUrl} class="whitespace-nowrap">
                {alternateLanguage}
              </a>
            </li>
          </ul>
        </div>

        <!-- Theme Toggle -->
        <label class="swap swap-rotate btn btn-ghost btn-sm btn-circle">
          <input
            type="checkbox"
            class="theme-controller"
            aria-label={i18n.footer.darkMode}
          />
          <Icon name="tabler:sun" class="swap-on h-5 w-5" />
          <Icon name="tabler:moon" class="swap-off h-5 w-5" />
        </label>

        <!-- Mobile Menu -->
        <div class="dropdown dropdown-end lg:hidden">
          <button class="btn btn-ghost btn-sm btn-circle" aria-label="Menu">
            <Icon name="tabler:menu" class="h-5 w-5" />
          </button>
          <ul
            tabindex="0"
            class="dropdown-content menu bg-base-200 rounded-box z-[1] w-52 p-2 shadow"
          >
            <li>
              <a
                href={aboutUrl}
                class={isActive(aboutUrl) ? "active font-medium" : ""}
                >{i18n.nav.about}</a
              >
            </li>
            <li>
              <a
                href={servicesUrl}
                class={isActive(servicesUrl) ? "active font-medium" : ""}
                >{i18n.nav.work}</a
              >
            </li>
            <li>
              <div class="tooltip tooltip-left" data-tip={i18n.nav.comingSoon}>
                <a class="cursor-not-allowed opacity-50">{i18n.nav.blog}</a>
              </div>
            </li>
            <li>
              <a
                href={contactUrl}
                class={isActive(contactUrl) ? "active font-medium" : ""}
                >{i18n.nav.contact}</a
              >
            </li>
            <div class="divider my-1"></div>
            <li class="sm:hidden">
              <a href="https://go.rio.my.id/g">
                <Icon name="tabler:brand-github" class="h-5 w-5" />
                GitHub
              </a>
            </li>
            <li class="sm:hidden">
              <a href="https://go.rio.my.id/l">
                <Icon name="tabler:brand-linkedin" class="h-5 w-5" />
                LinkedIn
              </a>
            </li>
            <li class="sm:hidden">
              <a href="https://go.rio.my.id/x">
                <Icon name="tabler:brand-x" class="h-5 w-5" />
                Twitter
              </a>
            </li>
          </ul>
        </div>
      </div>
    </div>
  </div>
</header>

<!-- Spacer to prevent content from hiding under fixed header -->
<div id="header-spacer" class="h-16 transition-all duration-300"></div>

<style>
  /* Active link styling */
  .menu a.active {
    background-color: hsl(var(--p) / 0.1);
    color: hsl(var(--p));
  }

  /* Logo animations and theme-based visibility */
  .logo-light,
  .logo-dark {
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
  }

  /* Light theme */
  :root[data-theme="light"] .logo-light {
    opacity: 1;
    visibility: visible;
  }

  :root[data-theme="light"] .logo-dark {
    opacity: 0;
    visibility: hidden;
  }

  /* Dark theme */
  :root[data-theme="dark"] .logo-dark {
    opacity: 1;
    visibility: visible;
  }

  :root[data-theme="dark"] .logo-light {
    opacity: 0;
    visibility: hidden;
  }

  /* Hover effect */
  .navbar-start a:hover .logo-light:not([style*="visibility: hidden"]),
  .navbar-start a:hover .logo-dark:not([style*="visibility: hidden"]) {
    transform: scale(1.05);
  }
</style>

<script is:inline>
  // Adjust header position based on banner visibility
  function adjustHeaderPosition() {
    const banner = document.getElementById("announcement-banner");
    const header = document.getElementById("main-header");
    const spacer = document.getElementById("header-spacer");

    if (banner && header && spacer) {
      const bannerHeight = banner.offsetHeight;
      header.style.top =
        banner.style.display === "none" ? "0" : `${bannerHeight}px`;
    }
  }

  // Direct theme toggle handler
  function setupThemeToggle() {
    const themeToggle = document.querySelector(".theme-controller");
    if (!themeToggle) return;

    // Set initial state based on current theme
    const currentTheme =
      document.documentElement.getAttribute("data-theme") || "light";
    themeToggle.checked = currentTheme === "dark";

    // Add click event listener
    themeToggle.addEventListener("change", function (e) {
      if (e.target && "checked" in e.target) {
        const newTheme = e.target.checked ? "dark" : "light";
        document.documentElement.setAttribute("data-theme", newTheme);
        localStorage.setItem("theme", newTheme);

        // Also update dark class for Tailwind dark mode
        if (newTheme === "dark") {
          document.documentElement.classList.add("dark");
        } else {
          document.documentElement.classList.remove("dark");
        }
      }
    });
  }

  // Run on page load
  document.addEventListener("DOMContentLoaded", function () {
    adjustHeaderPosition();
    setupThemeToggle();
  });

  // Also run when Astro page loads (for client-side navigation)
  document.addEventListener("astro:page-load", function () {
    adjustHeaderPosition();
    setupThemeToggle();
  });

  // Run when banner visibility changes
  const observer = new MutationObserver((mutations) => {
    mutations.forEach((mutation) => {
      if (
        mutation.type === "attributes" &&
        mutation.attributeName === "style"
      ) {
        adjustHeaderPosition();
      }
    });
  });

  const banner = document.getElementById("announcement-banner");
  if (banner) {
    observer.observe(banner, { attributes: true });
  }
</script>

<script>
  function updateLogoVisibility() {
    const theme =
      document.documentElement.getAttribute("data-theme") || "light";
    const lightLogo = document.querySelector(".logo-light");
    const darkLogo = document.querySelector(".logo-dark");

    if (!lightLogo || !darkLogo) return;

    // Add display classes based on theme
    if (theme === "dark") {
      lightLogo.classList.remove("opacity-100", "visible");
      lightLogo.classList.add("opacity-0", "invisible");
      darkLogo.classList.remove("opacity-0", "invisible");
      darkLogo.classList.add("opacity-100", "visible");
    } else {
      darkLogo.classList.remove("opacity-100", "visible");
      darkLogo.classList.add("opacity-0", "invisible");
      lightLogo.classList.remove("opacity-0", "invisible");
      lightLogo.classList.add("opacity-100", "visible");
    }
  }

  // Run on page load
  document.addEventListener("DOMContentLoaded", updateLogoVisibility);

  // Run on Astro page transitions
  document.addEventListener("astro:page-load", updateLogoVisibility);

  // Watch for theme changes
  const observer = new MutationObserver((mutations) => {
    mutations.forEach((mutation) => {
      if (mutation.attributeName === "data-theme") {
        updateLogoVisibility();
      }
    });
  });

  observer.observe(document.documentElement, {
    attributes: true,
    attributeFilter: ["data-theme"],
  });

  // Initial update
  updateLogoVisibility();
</script>
