---
import type { GetStaticPaths } from "astro";
import { getCollection } from "astro:content";
import BlogIndex from "../../layouts/BlogIndex.astro";

export const getStaticPaths = (async () => {
  const posts = await getCollection("blog-en");

  // Get all categories
  const categories = [...new Set(posts.map((post) => post.data.category))];

  // Return a route for each category
  return categories.map((category) => {
    return {
      params: { category },
      props: { category },
    };
  });
}) satisfies GetStaticPaths;

const { category } = Astro.props;

const posts = await getCollection("blog-en");
const sortedPosts = posts
  .filter((post) => post.data.category === category)
  .sort((a, b) => b.data.created_at.valueOf() - a.data.created_at.valueOf());

// Get categories and count for sidebar
const allCategories = [...new Set(posts.map((post) => post.data.category))].map(
  (cat) => ({
    name: cat,
    count: posts.filter((post) => post.data.category === cat).length,
  }),
);

const title = `Category: ${category}`;
const description = `Browse all posts in the ${category} category`;
---

<BlogIndex
  title={title}
  description={description}
  lang="en"
  posts={sortedPosts}
  categories={allCategories}
  currentCategory={category}
  pagination={{
    currentPage: 1,
    totalPages: 1,
    url: {
      prev: undefined,
      next: undefined,
    },
  }}
/>
